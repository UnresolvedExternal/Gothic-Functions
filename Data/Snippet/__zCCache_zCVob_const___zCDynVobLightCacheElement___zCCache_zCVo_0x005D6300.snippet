<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[zCCache<zCVob const*, zCDynVobLightCacheElement>::~zCCache<zCVob const*, zCDynVobLightCacheElement>()]]></Title>
			<Shortcut><![CDATA[__zCCache_zCVob_const___zCDynVobLightCacheElement___zCCache_zCVo_0x005D6300]]></Shortcut>
			<Description><![CDATA[public: virtual __thiscall zCCache<zCVob const*, zCDynVobLightCacheElement>::~zCCache<zCVob const*, zCDynVobLightCacheElement>()]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct zCCache_zCVob_const___zCDynVobLightCacheElement__Destructor : zCCache<zCVob const*, zCDynVobLightCacheElement> { void operator()(); };
BindedHook Ivk_zCCache_zCVob_const___zCDynVobLightCacheElement__Destructor{ ZENFOR(0x005B08D0, 0x005CDA70, 0x005CF740, 0x005D6300), &zCCache_zCVob_const___zCDynVobLightCacheElement__Destructor::operator() };
void zCCache_zCVob_const___zCDynVobLightCacheElement__Destructor::operator()()
{
	THISCALL(Ivk_zCCache_zCVob_const___zCDynVobLightCacheElement__Destructor)();
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>