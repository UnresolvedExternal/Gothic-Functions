<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[zCSparseArray<zCVob const*, zCCacheData<zCVob const*, zCDynVobLightCacheElement>>::IndexPtr(unsigned long): void* [const]]]></Title>
			<Description><![CDATA[protected: virtual void* __thiscall zCSparseArray<zCVob const*, zCCacheData<zCVob const*, zCDynVobLightCacheElement>>::IndexPtr(unsigned long) const]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___IndexPtr : zCSparseArray<zCVob const*, zCCacheData<zCVob const*, zCDynVobLightCacheElement>> { void* operator()(unsigned long) const; };
BindedHook Ivk_zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___IndexPtr{ ZENFOR(0x005B0E30, 0x005CDFE0, 0x005CFB60, 0x005D6720), &zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___IndexPtr::operator() };
void* zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___IndexPtr::operator()(unsigned long a0) const
{
	void* result = THISCALL(Ivk_zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___IndexPtr)(a0);
	return result;
}$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>