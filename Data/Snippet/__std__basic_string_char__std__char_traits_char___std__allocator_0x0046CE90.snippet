<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::basic_string<char, std::char_traits<char>, std::allocator<char>>::replace(unsigned int, unsigned int, std::basic_string<char, std::char_traits<char>, std::allocator<char>>const&, unsigned int, unsigned int): std::basic_string<char, std::char_traits<char>, std::allocator<char>>&]]></Title>
			<Description><![CDATA[public: std::basic_string<char, std::char_traits<char>, std::allocator<char>>& __thiscall std::basic_string<char, std::char_traits<char>, std::allocator<char>>::replace(unsigned int, unsigned int, std::basic_string<char, std::char_traits<char>, std::allocator<char>>const&, unsigned int, unsigned int)]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct std__basic_string_char__std__char_traits_char___std__allocator_char___replace : std::basic_string<char, std::char_traits<char>, std::allocator<char>> { std::basic_string<char, std::char_traits<char>, std::allocator<char>>& operator()(unsigned int, unsigned int, std::basic_string<char, std::char_traits<char>, std::allocator<char>>const&, unsigned int, unsigned int); };
BindedHook Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___replace{ ZENFOR(0x00467CC0, 0x0046FC20, 0x0046C260, 0x0046CE90), &std__basic_string_char__std__char_traits_char___std__allocator_char___replace::operator() };
std::basic_string<char, std::char_traits<char>, std::allocator<char>>& std__basic_string_char__std__char_traits_char___std__allocator_char___replace::operator()(unsigned int a0, unsigned int a1, std::basic_string<char, std::char_traits<char>, std::allocator<char>>const& a2, unsigned int a3, unsigned int a4)
{
	std::basic_string<char, std::char_traits<char>, std::allocator<char>>& result = THISCALL(Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___replace)(a0, a1, a2, a3, a4);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>