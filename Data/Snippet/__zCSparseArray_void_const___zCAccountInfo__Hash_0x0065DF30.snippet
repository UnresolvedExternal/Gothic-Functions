<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[zCSparseArray<void const*, zCAccountInfo>::Hash(void const*, unsigned long&, unsigned long&): void [const]]]></Title>
			<Shortcut><![CDATA[__zCSparseArray_void_const___zCAccountInfo__Hash_0x0065DF30]]></Shortcut>
			<Description><![CDATA[protected: virtual void __thiscall zCSparseArray<void const*, zCAccountInfo>::Hash(void const*, unsigned long&, unsigned long&)const]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct zCSparseArray_void_const___zCAccountInfo__Hash : zCSparseArray<void const*, zCAccountInfo> { void operator()(void const*, unsigned long&, unsigned long&) const; };
BindedHook Ivk_zCSparseArray_void_const___zCAccountInfo__Hash{ ZENFOR(0x0075A470, 0x0079CAC0, 0x007A73C0, 0x0065DF30), &zCSparseArray_void_const___zCAccountInfo__Hash::operator() };
void zCSparseArray_void_const___zCAccountInfo__Hash::operator()(void const* a0, unsigned long& a1, unsigned long& a2) const
{
	THISCALL(Ivk_zCSparseArray_void_const___zCAccountInfo__Hash)(a0, a1, a2);
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>