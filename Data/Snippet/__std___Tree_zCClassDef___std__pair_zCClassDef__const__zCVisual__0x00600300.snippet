<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::_Tree<zCClassDef*, std::pair<zCClassDef* const, zCVisual*>, std::map<zCClassDef*, zCVisual*, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Kfn, std::less<zCClassDef*>, std::allocator<zCVisual*>>::const_iterator::_Inc(): void]]></Title>
			<Description><![CDATA[public: void __thiscall std::_Tree<zCClassDef*, std::pair<zCClassDef* const, zCVisual*>, std::map<zCClassDef*, zCVisual*, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Kfn, std::less<zCClassDef*>, std::allocator<zCVisual*>>::const_iterator::_Inc()]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[// WARNING!!! Supported versions: G1A, G2
struct std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____const_iterator__Inc : std::_Tree<zCClassDef*, std::pair<zCClassDef* const, zCVisual*>, std::map<zCClassDef*, zCVisual*, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Kfn, std::less<zCClassDef*>, std::allocator<zCVisual*>>::const_iterator { void operator()(); };
BindedHook Ivk_std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____const_iterator__Inc{ ZENFOR(0x00000000, 0x005FA1C0, 0x00600300, 0x00000000), &std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____const_iterator__Inc::operator() };
void std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____const_iterator__Inc::operator()()
{
	THISCALL(Ivk_std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____const_iterator__Inc)();
}$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>