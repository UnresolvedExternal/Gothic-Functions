<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Refcnt(char const*): unsigned char&]]></Title>
			<Shortcut><![CDATA[__std__basic_string_char__std__char_traits_char___std__allocator_0x005DBC90]]></Shortcut>
			<Description><![CDATA[private: unsigned char& __thiscall std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Refcnt(char const*)]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct std__basic_string_char__std__char_traits_char___std__allocator_char____Refcnt : std::basic_string<char, std::char_traits<char>, std::allocator<char>> { unsigned char& operator()(char const*); };
BindedHook Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char____Refcnt{ ZENFOR(0x005B4980, 0x005D1F00, 0x005D4ED0, 0x005DBC90), &std__basic_string_char__std__char_traits_char___std__allocator_char____Refcnt::operator() };
unsigned char& std__basic_string_char__std__char_traits_char___std__allocator_char____Refcnt::operator()(char const* a0)
{
	unsigned char& result = THISCALL(Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char____Refcnt)(a0);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>