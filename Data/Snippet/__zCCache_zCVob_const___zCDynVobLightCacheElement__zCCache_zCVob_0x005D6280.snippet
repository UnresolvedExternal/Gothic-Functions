<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[zCCache<zCVob const*, zCDynVobLightCacheElement>::zCCache<zCVob const*, zCDynVobLightCacheElement>(unsigned long, unsigned long)]]></Title>
			<Description><![CDATA[public: __thiscall zCCache<zCVob const*, zCDynVobLightCacheElement>::zCCache<zCVob const*, zCDynVobLightCacheElement>(unsigned long, unsigned long)]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct zCCache_zCVob_const___zCDynVobLightCacheElement__zCCache_zCVob_const___zCDynVobLightCacheElement_ : zCCache<zCVob const*, zCDynVobLightCacheElement> { zCCache<zCVob const*, zCDynVobLightCacheElement>* operator()(unsigned long, unsigned long); };
BindedHook Ivk_zCCache_zCVob_const___zCDynVobLightCacheElement__zCCache_zCVob_const___zCDynVobLightCacheElement_{ ZENFOR(0x005B0850, 0x005CD9F0, 0x005CF6C0, 0x005D6280), &zCCache_zCVob_const___zCDynVobLightCacheElement__zCCache_zCVob_const___zCDynVobLightCacheElement_::operator() };
zCCache<zCVob const*, zCDynVobLightCacheElement>* zCCache_zCVob_const___zCDynVobLightCacheElement__zCCache_zCVob_const___zCDynVobLightCacheElement_::operator()(unsigned long a0, unsigned long a1)
{
	zCCache<zCVob const*, zCDynVobLightCacheElement>* result = THISCALL(Ivk_zCCache_zCVob_const___zCDynVobLightCacheElement__zCCache_zCVob_const___zCDynVobLightCacheElement_)(a0, a1);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>