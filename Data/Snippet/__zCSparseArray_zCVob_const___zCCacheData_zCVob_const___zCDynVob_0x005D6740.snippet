<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[zCSparseArray<zCVob const*, zCCacheData<zCVob const*, zCDynVobLightCacheElement>>::ManDatPtr(unsigned long): zCSparseArrayManDat* [const]]]></Title>
			<Shortcut><![CDATA[__zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVob_0x005D6740]]></Shortcut>
			<Description><![CDATA[protected: virtual zCSparseArrayManDat* __thiscall zCSparseArray<zCVob const*, zCCacheData<zCVob const*, zCDynVobLightCacheElement>>::ManDatPtr(unsigned long)const]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___ManDatPtr : zCSparseArray<zCVob const*, zCCacheData<zCVob const*, zCDynVobLightCacheElement>> { zCSparseArrayManDat* operator()(unsigned long) const; };
BindedHook Ivk_zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___ManDatPtr{ ZENFOR(0x005B0E50, 0x005CE000, 0x005CFB80, 0x005D6740), &zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___ManDatPtr::operator() };
zCSparseArrayManDat* zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___ManDatPtr::operator()(unsigned long a0) const
{
	zCSparseArrayManDat* result = THISCALL(Ivk_zCSparseArray_zCVob_const___zCCacheData_zCVob_const___zCDynVobLightCacheElement___ManDatPtr)(a0);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>