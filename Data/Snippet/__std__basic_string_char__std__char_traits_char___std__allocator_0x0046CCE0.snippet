<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::basic_string<char, std::char_traits<char>, std::allocator<char>>::substr(unsigned int, unsigned int): std::basic_string<char, std::char_traits<char>, std::allocator<char>> [const]]]></Title>
			<Description><![CDATA[public: std::basic_string<char, std::char_traits<char>, std::allocator<char>>__thiscall std::basic_string<char, std::char_traits<char>, std::allocator<char>>::substr(unsigned int, unsigned int)const]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct std__basic_string_char__std__char_traits_char___std__allocator_char___substr : std::basic_string<char, std::char_traits<char>, std::allocator<char>> { std::basic_string<char, std::char_traits<char>, std::allocator<char>> operator()(unsigned int, unsigned int) const; };
BindedHook Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___substr{ ZENFOR(0x00467B10, 0x0046FA70, 0x0046C0B0, 0x0046CCE0), &std__basic_string_char__std__char_traits_char___std__allocator_char___substr::operator() };
std::basic_string<char, std::char_traits<char>, std::allocator<char>> std__basic_string_char__std__char_traits_char___std__allocator_char___substr::operator()(unsigned int a0, unsigned int a1) const
{
	std::basic_string<char, std::char_traits<char>, std::allocator<char>> result = THISCALL(Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___substr)(a0, a1);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>