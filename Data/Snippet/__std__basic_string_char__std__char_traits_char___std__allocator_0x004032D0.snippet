<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::basic_string<char, std::char_traits<char>, std::allocator<char>>::max_size(): unsigned int [const]]]></Title>
			<Shortcut><![CDATA[__std__basic_string_char__std__char_traits_char___std__allocator_0x004032D0]]></Shortcut>
			<Description><![CDATA[public: unsigned int __thiscall std::basic_string<char, std::char_traits<char>, std::allocator<char>>::max_size()const]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct std__basic_string_char__std__char_traits_char___std__allocator_char___max_size : std::basic_string<char, std::char_traits<char>, std::allocator<char>> { unsigned int operator()() const; };
BindedHook Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___max_size{ ZENFOR(0x00403320, 0x00403780, 0x004032D0, 0x004032D0), &std__basic_string_char__std__char_traits_char___std__allocator_char___max_size::operator() };
unsigned int std__basic_string_char__std__char_traits_char___std__allocator_char___max_size::operator()() const
{
	unsigned int result = THISCALL(Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___max_size)();
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>