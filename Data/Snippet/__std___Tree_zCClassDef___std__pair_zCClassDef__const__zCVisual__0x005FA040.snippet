<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::_Tree<zCClassDef*, std::pair<zCClassDef* const, zCVisual*>, std::map<zCClassDef*, zCVisual*, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Kfn, std::less<zCClassDef*>, std::allocator<zCVisual*>>::erase(??, throw(??): ??::iterato5d00882c]]></Title>
			<Description><![CDATA[public:??::iterato5d00882c __thiscall std::_Tree<zCClassDef*, std::pair<zCClassDef* const, zCVisual*>, std::map<zCClassDef*, zCVisual*, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Kfn, std::less<zCClassDef*>, std::allocator<zCVisual*>>::erase(??)throw(??)]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[// WARNING!!! Supported versions: G1A
struct std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual____erase : std::_Tree<zCClassDef*, std::pair<zCClassDef* const, zCVisual*>, std::map<zCClassDef*, zCVisual*, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Kfn, std::less<zCClassDef*>, std::allocator<zCVisual*>> { ??::iterato5d00882c operator()(??, throw(??); };
BindedHook Ivk_std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual____erase{ ZENFOR(0x00000000, 0x005FA040, 0x00000000, 0x00000000), &std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual____erase::operator() };
??::iterato5d00882c std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual____erase::operator()(?? a0, throw(?? a1)
{
	??::iterato5d00882c result = THISCALL(Ivk_std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual____erase)(a0, a1);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>