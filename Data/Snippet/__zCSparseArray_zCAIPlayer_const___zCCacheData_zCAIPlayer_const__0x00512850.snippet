<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[zCSparseArray<zCAIPlayer const*, zCCacheData<zCAIPlayer const*, zCAIPlayer::zTLedgeInfo>>::DataPtr(unsigned long): void* [const]]]></Title>
			<Shortcut><![CDATA[__zCSparseArray_zCAIPlayer_const___zCCacheData_zCAIPlayer_const__0x00512850]]></Shortcut>
			<Description><![CDATA[protected: virtual void* __thiscall zCSparseArray<zCAIPlayer const*, zCCacheData<zCAIPlayer const*, zCAIPlayer::zTLedgeInfo>>::DataPtr(unsigned long)const]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct zCSparseArray_zCAIPlayer_const___zCCacheData_zCAIPlayer_const___zCAIPlayer__zTLedgeInfo___DataPtr : zCSparseArray<zCAIPlayer const*, zCCacheData<zCAIPlayer const*, zCAIPlayer::zTLedgeInfo>> { void* operator()(unsigned long) const; };
BindedHook Ivk_zCSparseArray_zCAIPlayer_const___zCCacheData_zCAIPlayer_const___zCAIPlayer__zTLedgeInfo___DataPtr{ ZENFOR(0x00502D00, 0x005167F0, 0x0050FA80, 0x00512850), &zCSparseArray_zCAIPlayer_const___zCCacheData_zCAIPlayer_const___zCAIPlayer__zTLedgeInfo___DataPtr::operator() };
void* zCSparseArray_zCAIPlayer_const___zCCacheData_zCAIPlayer_const___zCAIPlayer__zTLedgeInfo___DataPtr::operator()(unsigned long a0) const
{
	void* result = THISCALL(Ivk_zCSparseArray_zCAIPlayer_const___zCCacheData_zCAIPlayer_const___zCAIPlayer__zTLedgeInfo___DataPtr)(a0);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>