<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[zCVolatileMemory<zCVertexTransform>::zCVolatileMemory<zCVertexTransform>(unsigned int, zTVolatileOverflowMode)]]></Title>
			<Description><![CDATA[public: __thiscall zCVolatileMemory<zCVertexTransform>::zCVolatileMemory<zCVertexTransform>(unsigned int, zTVolatileOverflowMode)]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct zCVolatileMemory_zCVertexTransform__zCVolatileMemory_zCVertexTransform_ : zCVolatileMemory<zCVertexTransform> { zCVolatileMemory<zCVertexTransform>* operator()(unsigned int, zTVolatileOverflowMode); };
BindedHook Ivk_zCVolatileMemory_zCVertexTransform__zCVolatileMemory_zCVertexTransform_{ ZENFOR(0x004FC2A0, 0x0050F370, 0x00508F30, 0x0050BCE0), &zCVolatileMemory_zCVertexTransform__zCVolatileMemory_zCVertexTransform_::operator() };
zCVolatileMemory<zCVertexTransform>* zCVolatileMemory_zCVertexTransform__zCVolatileMemory_zCVertexTransform_::operator()(unsigned int a0, zTVolatileOverflowMode a1)
{
	zCVolatileMemory<zCVertexTransform>* result = THISCALL(Ivk_zCVolatileMemory_zCVertexTransform__zCVolatileMemory_zCVertexTransform_)(a0, a1);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>