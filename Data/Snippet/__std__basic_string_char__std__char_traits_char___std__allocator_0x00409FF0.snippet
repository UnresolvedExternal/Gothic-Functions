<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>>const&)]]></Title>
			<Description><![CDATA[public: __thiscall std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>>const&)]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct std__basic_string_char__std__char_traits_char___std__allocator_char___basic_string_char__std__char_traits_char___std__allocator_char__ : std::basic_string<char, std::char_traits<char>, std::allocator<char>> { void operator()(std::basic_string<char, std::char_traits<char>, std::allocator<char>>const&); };
BindedHook Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___basic_string_char__std__char_traits_char___std__allocator_char__{ ZENFOR(0x00409C90, 0x0040AD00, 0x00409FF0, 0x00409FF0), &std__basic_string_char__std__char_traits_char___std__allocator_char___basic_string_char__std__char_traits_char___std__allocator_char__::operator() };
void std__basic_string_char__std__char_traits_char___std__allocator_char___basic_string_char__std__char_traits_char___std__allocator_char__::operator()(std::basic_string<char, std::char_traits<char>, std::allocator<char>>const& a0)
{
	THISCALL(Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___basic_string_char__std__char_traits_char___std__allocator_char__)(a0);
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>