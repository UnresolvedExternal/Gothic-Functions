<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[zCMemPool<zCDynVobLightCacheElement>::zCMemPool<zCDynVobLightCacheElement>(unsigned int, unsigned int)]]></Title>
			<Description><![CDATA[public: __thiscall zCMemPool<zCDynVobLightCacheElement>::zCMemPool<zCDynVobLightCacheElement>(unsigned int, unsigned int)]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct zCMemPool_zCDynVobLightCacheElement__zCMemPool_zCDynVobLightCacheElement_ : zCMemPool<zCDynVobLightCacheElement> { zCMemPool<zCDynVobLightCacheElement>* operator()(unsigned int, unsigned int); };
BindedHook Ivk_zCMemPool_zCDynVobLightCacheElement__zCMemPool_zCDynVobLightCacheElement_{ ZENFOR(0x005B0810, 0x005CD990, 0x005CF620, 0x005D61E0), &zCMemPool_zCDynVobLightCacheElement__zCMemPool_zCDynVobLightCacheElement_::operator() };
zCMemPool<zCDynVobLightCacheElement>* zCMemPool_zCDynVobLightCacheElement__zCMemPool_zCDynVobLightCacheElement_::operator()(unsigned int a0, unsigned int a1)
{
	zCMemPool<zCDynVobLightCacheElement>* result = THISCALL(Ivk_zCMemPool_zCDynVobLightCacheElement__zCMemPool_zCDynVobLightCacheElement_)(a0, a1);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>