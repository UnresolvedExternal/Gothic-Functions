<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::_Tree<zCClassDef*, std::pair<zCClassDef* const, zCVisual*>, std::map<zCClassDef*, zCVisual*, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Kfn, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Lbound(??, const throw(??): ??::_Nodedde1d6c2*]]></Title>
			<Shortcut><![CDATA[__std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual__0x005FAB10]]></Shortcut>
			<Description><![CDATA[protected:??::_Nodedde1d6c2* __thiscall std::_Tree<zCClassDef*, std::pair<zCClassDef* const, zCVisual*>, std::map<zCClassDef*, zCVisual*, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Kfn, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Lbound(??)const throw(??)]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[// WARNING!!! Supported versions: G1A
struct std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____Lbound : std::_Tree<zCClassDef*, std::pair<zCClassDef* const, zCVisual*>, std::map<zCClassDef*, zCVisual*, std::less<zCClassDef*>, std::allocator<zCVisual*>>::_Kfn, std::less<zCClassDef*>, std::allocator<zCVisual*>> { ??::_Nodedde1d6c2* operator()(??, const throw(??); };
BindedHook Ivk_std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____Lbound{ ZENFOR(0x00000000, 0x005FAB10, 0x00000000, 0x00000000), &std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____Lbound::operator() };
??::_Nodedde1d6c2* std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____Lbound::operator()(?? a0, const throw(?? a1)
{
	??::_Nodedde1d6c2* result = THISCALL(Ivk_std___Tree_zCClassDef___std__pair_zCClassDef__const__zCVisual____std__map_zCClassDef___zCVisual___std__less_zCClassDef____std__allocator_zCVisual______Kfn__std__less_zCClassDef____std__allocator_zCVisual_____Lbound)(a0, a1);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>