<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::basic_string<char, std::char_traits<char>, std::allocator<char>>::compare(char const*): int [const]]]></Title>
			<Description><![CDATA[public: int __thiscall std::basic_string<char, std::char_traits<char>, std::allocator<char>>::compare(char const*) const]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct std__basic_string_char__std__char_traits_char___std__allocator_char___compare : std::basic_string<char, std::char_traits<char>, std::allocator<char>> { int operator()(char const*) const; };
BindedHook Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___compare{ ZENFOR(0x0042C0C0, 0x0042F1A0, 0x0040A1D0, 0x0040A1D0), &std__basic_string_char__std__char_traits_char___std__allocator_char___compare::operator() };
int std__basic_string_char__std__char_traits_char___std__allocator_char___compare::operator()(char const* a0) const
{
	int result = THISCALL(Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___compare)(a0);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>