<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title><![CDATA[std::basic_string<char, std::char_traits<char>, std::allocator<char>>::compare(unsigned int, unsigned int, char const*, unsigned int): int [const]]]></Title>
			<Description><![CDATA[public: int __thiscall std::basic_string<char, std::char_traits<char>, std::allocator<char>>::compare(unsigned int, unsigned int, char const*, unsigned int) const]]></Description>
			<Author>TopLayer</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="cpp"><![CDATA[struct std__basic_string_char__std__char_traits_char___std__allocator_char___compare : std::basic_string<char, std::char_traits<char>, std::allocator<char>> { int operator()(unsigned int, unsigned int, char const*, unsigned int) const; };
BindedHook Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___compare{ ZENFOR(0x00409E70, 0x0040AEE0, 0x0040A230, 0x0040A230), &std__basic_string_char__std__char_traits_char___std__allocator_char___compare::operator() };
int std__basic_string_char__std__char_traits_char___std__allocator_char___compare::operator()(unsigned int a0, unsigned int a1, char const* a2, unsigned int a3) const
{
	int result = THISCALL(Ivk_std__basic_string_char__std__char_traits_char___std__allocator_char___compare)(a0, a1, a2, a3);
	return result;
}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>